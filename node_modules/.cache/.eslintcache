[{"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\index.js":"1","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\reportWebVitals.js":"2","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\App.js":"3","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\Profile.js":"4","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\Login.js":"5","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\IndividualTweet.js":"6","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\Pin.js":"7","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\MainHome.js":"8","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\SearchResults.js":"9","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\ProfileMain.js":"10","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Sidebar.js":"11","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Search.js":"12","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\LoginButton.js":"13","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\IndividualTweetMain.js":"14","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Feed.js":"15","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\CreateTweet.js":"16","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\SignOutButton.js":"17","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\SidebarButton.js":"18","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Tweet.js":"19","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\SearchButton.js":"20"},{"size":612,"mtime":1635892579856,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1635892579856,"results":"23","hashOfConfig":"22"},{"size":1047,"mtime":1635896556889,"results":"24","hashOfConfig":"22"},{"size":378,"mtime":1635892579856,"results":"25","hashOfConfig":"22"},{"size":428,"mtime":1635912091457,"results":"26","hashOfConfig":"22"},{"size":761,"mtime":1635892579856,"results":"27","hashOfConfig":"22"},{"size":1671,"mtime":1635892579856,"results":"28","hashOfConfig":"22"},{"size":4338,"mtime":1635913736421,"results":"29","hashOfConfig":"22"},{"size":4854,"mtime":1635917779855,"results":"30","hashOfConfig":"22"},{"size":417,"mtime":1635896851231,"results":"31","hashOfConfig":"22"},{"size":562,"mtime":1635892579856,"results":"32","hashOfConfig":"22"},{"size":1201,"mtime":1635900492756,"results":"33","hashOfConfig":"22"},{"size":975,"mtime":1635892579856,"results":"34","hashOfConfig":"22"},{"size":4306,"mtime":1635911079908,"results":"35","hashOfConfig":"22"},{"size":3223,"mtime":1635917318167,"results":"36","hashOfConfig":"22"},{"size":2525,"mtime":1635912022554,"results":"37","hashOfConfig":"22"},{"size":235,"mtime":1635892579856,"results":"38","hashOfConfig":"22"},{"size":530,"mtime":1635893219547,"results":"39","hashOfConfig":"22"},{"size":2093,"mtime":1635917550229,"results":"40","hashOfConfig":"22"},{"size":1293,"mtime":1635892579856,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1xw3zeo",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\index.js",[],["87","88"],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\reportWebVitals.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\App.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\Profile.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\Login.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\IndividualTweet.js",["89","90"],"\r\nimport React, { useEffect, useState } from 'react'\r\nimport Search from './components/Search'\r\nimport Sidebar from './components/Sidebar'\r\nimport IndividualTweetMain from './components/IndividualTweetMain'\r\nimport CreateTweet from './components/CreateTweet'\r\nimport {useParams } from 'react-router-dom';\r\n\r\n\r\nconst IndividualTweet = () => {\r\n    let { tweetID } = useParams();\r\n    let [ID, setID] = useState(`${tweetID}`);\r\n\r\n    //useEffect(()=>{\r\n    //    setID(`${useParams()}`);\r\n    //},[])\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Search/>\r\n            <Sidebar/>\r\n            <IndividualTweetMain tweetID = {ID}/>\r\n            <CreateTweet styles=\"reply\"/>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default IndividualTweet;","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\Pin.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\MainHome.js",["91"],"import React, { useEffect, useState } from 'react'\r\nimport Search from './components/Search'\r\nimport Sidebar from './components/Sidebar'\r\nimport Feed from './components/Feed'\r\nimport CreateTweet from './components/CreateTweet'\r\n\r\nconst MainHome = () => {\r\n\r\n    let tweetList = [];\r\n    const [tweetInput, setTweetInput] = useState(\"\");\r\n    const [tweetsList, setTweetsList] = useState([]);\r\n    const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n    const tweetListContains = (list, id) => {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i][\"id\"] === id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const getTweets = () => {\r\n        var axios = require('axios');\r\n        let data = {\"access_token\": window.sessionStorage.getItem(\"access_token\"), \"access_token_secret\": window.sessionStorage.getItem(\"access_secret\")};\r\n        var config = {\r\n        method: 'post',\r\n        url: 'https://v0xrcmlje7.execute-api.us-west-1.amazonaws.com/default/LoadTimeline',\r\n        headers: { \r\n            'Content-Type': 'text/plain'\r\n        },\r\n        data: data\r\n        }\r\n        axios(config)\r\n        .then(function (response) {\r\n        for(let x in response.data) {\r\n            let username = response.data[x][\"user\"][\"name\"];\r\n            let screen_name = response.data[x][\"user\"][\"screen_name\"];\r\n            let profile_image = response.data[x][\"user\"][\"profile_image_url_https\"]\r\n            let tweet_id = response.data[x][\"id_str\"];\r\n            let text = response.data[x][\"full_text\"];\r\n            let tweet_image = null;\r\n            if(response.data[x][\"entities\"][\"media\"] !== undefined) {\r\n            tweet_image = response.data[x][\"entities\"][\"media\"][0][\"media_url_https\"];\r\n            }\r\n            let retweet_count = response.data[x][\"retweet_count\"];\r\n            let favorite_count = response.data[x][\"favorite_count\"];\r\n            let retweeted_user = null;\r\n            let retweeted_text = null;\r\n            let retweeted_screen_name = null;\r\n            let retweeted_profile_image = null;\r\n            if(response.data[x][\"retweeted_status\"] !== undefined) {\r\n                retweeted_user = response.data[x][\"retweeted_status\"][\"user\"][\"name\"];\r\n                retweeted_screen_name =response.data[x][\"retweeted_status\"][\"user\"][\"screen_name\"];\r\n                retweeted_profile_image = response.data[x][\"retweeted_status\"][\"user\"][\"profile_image_url_https\"];\r\n                retweeted_text = response.data[x][\"retweeted_status\"][\"full_text\"]; \r\n            }\r\n            let in_reply_to_user = response.data[x][\"in_reply_to_screen_name\"];\r\n            let is_quote_status = response.data[x][\"is_quote_status\"];\r\n            if(tweetListContains(tweetList, tweet_id) === false) {\r\n                tweetList.push({\r\n                    \"user\": username, \r\n                    \"screen_name\": screen_name,\r\n                    \"profile_image\": profile_image,\r\n                    \"tweet_content\": text, \r\n                    \"tweet_image\": tweet_image,\r\n                    \"in_reply_to\": in_reply_to_user, \r\n                    \"retweeted_user\": retweeted_user,\r\n                    \"retweeted_screen_name\": retweeted_screen_name,\r\n                    \"retweeted_profile_image\": retweeted_profile_image,\r\n                    \"retweeted_text\": retweeted_text,\r\n                    \"is_quote_status\": is_quote_status,\r\n                    \"retweet_count\": retweet_count,\r\n                    \"favorite_count\": favorite_count,\r\n                    \"id\": tweet_id \r\n                });\r\n                console.log(\"ADDED\");\r\n            }\r\n        }\r\n        setTweetsList(tweetList);\r\n        })\r\n        .catch(function (error) {\r\n        console.log(error);\r\n        });\r\n    };\r\n\r\n    useEffect(()=>{\r\n        getTweets();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"main-container\">\r\n            <Search searchInput = {searchInput} setSearchInput={setSearchInput}/>\r\n            <Sidebar/>\r\n            <Feed tweetsList={tweetsList} styles=\"feed\" setTweetsList={setTweetsList}/>\r\n            <CreateTweet tweetsList={tweetsList} setTweetsList={setTweetsList} tweetInput={tweetInput} setTweetInput={setTweetInput} styles=\"create-tweet\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MainHome;\r\n\r\n            ","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\SearchResults.js",["92"],"import React, { useState, useEffect } from 'react'\r\nimport Search from './components/Search'\r\nimport Sidebar from './components/Sidebar'\r\nimport Feed from './components/Feed'\r\nimport {useParams } from 'react-router-dom';\r\n\r\nconst SearchResults = () => {\r\n\r\n    let resultList = [];\r\n    const [resultsList, setResultsList] = useState([]);\r\n    const { searchTerm } = useParams();\r\n    const [searchInput, setSearchInput] = useState(`${searchTerm}`);\r\n    \r\n    const listContains = (list, id) => {\r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i][\"id\"] === id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /*\r\n    const axios = require('axios');\r\n    const data = '1450591326479831040';\r\n\r\n    const config = {\r\n        method: 'get',\r\n        url: 'https://v0xrcmlje7.execute-api.us-west-1.amazonaws.com/default/ReadTweet',\r\n        headers: { \r\n        'Content-Type': 'text/plain',\r\n        },\r\n        data : data\r\n    };\r\n\r\n    axios(config)\r\n    .then(function (response) {\r\n        console.log(JSON.stringify(response.data));\r\n    })\r\n    .catch(function (error) {\r\n         console.log(error);\r\n    });*/\r\n\r\n\r\n    //Fetch Timeline\r\n    //Get Tweets from Timeline into State\r\n    const getResults = () => {\r\n        var axios = require('axios');\r\n        let data = {\"searchQuery\":searchInput, \"token\": \"1454729415011700738-ib7ql4SU5vag2PBOtoMAeFPc2dyxXF\", \"secret\":\"osxGjJfDEvQEc0oiWlefuyFM7IQbkj8FhrsXOMHpCvuJ1\"}\r\n        var config = {\r\n        method: 'post',\r\n        url: 'https://v0xrcmlje7.execute-api.us-west-1.amazonaws.com/default/SearchTweets',\r\n        headers: { \r\n            'Content-Type': 'text/plain'\r\n        },\r\n        data: data,\r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n            let resp_object = JSON.parse(response.data[\"body\"]);\r\n            console.log(resp_object);\r\n        for(let x in resp_object) {\r\n            let username = resp_object[x][\"user\"][\"name\"];\r\n            let screen_name = resp_object[x][\"user\"][\"screen_name\"];\r\n            let profile_image = resp_object[x][\"user\"][\"profile_image_url_https\"]\r\n            let tweet_id = resp_object[x][\"id_str\"];\r\n            let text = resp_object[x][\"full_text\"];\r\n            let tweet_image = null;\r\n            if(resp_object[x][\"entities\"][\"media\"] !== undefined) {\r\n            tweet_image = resp_object[x][\"entities\"][\"media\"][0][\"media_url_https\"];\r\n            }\r\n            let retweet_count = resp_object[x][\"retweet_count\"];\r\n            let favorite_count = resp_object[x][\"favorite_count\"];\r\n            let retweeted_user = null;\r\n            let retweeted_text = null;\r\n            let retweeted_screen_name = null;\r\n            let retweeted_profile_image = null;\r\n            if(resp_object[x][\"retweeted_status\"] !== undefined) {\r\n                retweeted_user = resp_object[x][\"retweeted_status\"][\"user\"][\"name\"];\r\n                retweeted_screen_name = resp_object[x][\"retweeted_status\"][\"user\"][\"screen_name\"];\r\n                retweeted_profile_image = resp_object[x][\"retweeted_status\"][\"user\"][\"profile_image_url_https\"];\r\n                retweeted_text = resp_object[x][\"retweeted_status\"][\"full_text\"]; \r\n            }\r\n            let in_reply_to_user = resp_object[x][\"in_reply_to_screen_name\"];\r\n            let is_quote_status = resp_object[x][\"is_quote_status\"];\r\n            if(listContains(resultList, tweet_id) === false) {\r\n                resultList.push({\r\n                    \"user\": username, \r\n                    \"screen_name\": screen_name,\r\n                    \"profile_image\": profile_image,\r\n                    \"tweet_content\": text, \r\n                    \"tweet_image\": tweet_image,\r\n                    \"in_reply_to\": in_reply_to_user, \r\n                    \"retweeted_user\": retweeted_user,\r\n                    \"retweeted_screen_name\": retweeted_screen_name,\r\n                    \"retweeted_profile_image\": retweeted_profile_image,\r\n                    \"retweeted_text\": retweeted_text,\r\n                    \"is_quote_status\": is_quote_status,\r\n                    \"retweet_count\": retweet_count,\r\n                    \"favorite_count\": favorite_count,\r\n                    \"id\": tweet_id \r\n                });\r\n                console.log(\"ADDED!\");\r\n            }\r\n        }\r\n        setResultsList(resultList);\r\n        })\r\n        .catch(function (error) {\r\n        console.log(error);\r\n        });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getResults();\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"search-results-container\">\r\n            <Search searchInput = {searchInput} setSearchInput={setSearchInput}/>\r\n            <Sidebar/>\r\n            <Feed tweetsList={resultsList} styles=\"feed-search\" setTweetsList={setResultsList}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchResults;","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\ProfileMain.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Sidebar.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Search.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\LoginButton.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\IndividualTweetMain.js",["93"],"import React, { useEffect, useState , useRef} from 'react'\r\nimport Feed from './Feed'\r\n\r\n const IndividualTweetMain = ({tweetID}) => {\r\n\r\n    let tweet = {};\r\n    let tweetList = [];\r\n    const tweetsList = useRef([]);\r\n    const [alreadyDid, setAlreadyDid] = useState(false);\r\n\r\n    //Get tweet ID in here somehow\r\n    //Use ReadTweet to get the contents of that Tweet\r\n    //Display Tweet\r\n    const getIndividualTweet = () => {\r\n        if (alreadyDid === false)\r\n        {  \r\n        var axios = require('axios');\r\n        console.log(\"here\");\r\n        let data = {\"id\": tweetID, \"token\": window.sessionStorage.getItem(\"access_token\"), \"secret\": window.sessionStorage.getItem(\"access_secret\")};\r\n        console.log(typeof(data));\r\n        var config = {\r\n        method: 'post',\r\n        url: 'https://v0xrcmlje7.execute-api.us-west-1.amazonaws.com/default/ReadTweet',\r\n        headers: { \r\n            'Content-Type': 'text/plain'\r\n        },\r\n        data: data,\r\n        };\r\n        axios(config)\r\n        .then(function (response) {\r\n        //for(let x in response.data) {\r\n        console.log(response.data)\r\n        let username = response.data[\"user\"][\"name\"];\r\n            let screen_name = response.data[\"user\"][\"screen_name\"];\r\n            let profile_image = response.data[\"user\"][\"profile_image_url_https\"]\r\n            let tweet_id = response.data[\"id_str\"];\r\n            let text = response.data[\"full_text\"];\r\n            let tweet_image = null;\r\n            if(response.data[\"entities\"][\"media\"] !== undefined) {\r\n            tweet_image = response.data[\"entities\"][\"media\"][0][\"media_url_https\"];\r\n            }\r\n            let retweet_count = response.data[\"retweet_count\"];\r\n            let favorite_count = response.data[\"favorite_count\"];\r\n            let retweeted_user = null;\r\n            let retweeted_text = null;\r\n            let retweeted_screen_name = null;\r\n            let retweeted_profile_image = null;\r\n            if(response.data[\"retweeted_status\"] !== undefined) {\r\n                retweeted_user = response.data[\"retweeted_status\"][\"user\"][\"name\"];\r\n                retweeted_screen_name =response.data[\"retweeted_status\"][\"user\"][\"screen_name\"];\r\n                retweeted_profile_image = response.data[\"retweeted_status\"][\"user\"][\"profile_image_url_https\"];\r\n                retweeted_text = response.data[\"retweeted_status\"][\"full_text\"]; \r\n            }\r\n            let in_reply_to_user = response.data[\"in_reply_to_screen_name\"];\r\n            let is_quote_status = response.data[\"is_quote_status\"];\r\n        tweet=({\r\n            \"user\": username, \r\n            \"screen_name\": screen_name,\r\n            \"profile_image\": profile_image,\r\n            \"tweet_content\": text, \r\n            \"tweet_image\": tweet_image,\r\n            \"in_reply_to\": in_reply_to_user, \r\n            \"retweeted_user\": retweeted_user,\r\n            \"retweeted_screen_name\": retweeted_screen_name,\r\n            \"retweeted_profile_image\": retweeted_profile_image,\r\n            \"retweeted_text\": retweeted_text,\r\n            \"is_quote_status\": is_quote_status,\r\n            \"retweet_count\": retweet_count,\r\n            \"favorite_count\": favorite_count,\r\n            \"id\": tweet_id \r\n            });\r\n        tweetList.push(tweet);\r\n        tweetsList.current = tweetList;\r\n        console.log(`${tweet}`);\r\n        setAlreadyDid(true);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n        }   \r\n    };\r\n    //setTweetsList(tweetList);\r\n    //})\r\n\r\n    useEffect(()=>{\r\n        getIndividualTweet();\r\n    },[alreadyDid])\r\n    \r\n    return ( \r\n        <div>\r\n            <Feed tweetsList={tweetsList.current} styles=\"individual-tweet-main\"/>\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\n/*<Tweet tweet={tweet} user={tweet.user} \r\nscreen_name={tweet.screen_name} profile_image={tweet.profile_image} \r\ntweet_content={tweet.tweet_content} in_reply_to={tweet.in_reply_to} \r\nretweeted_user={tweet.retweeted_user} retweeted_screen_name={tweet.retweeted_screen_name} \r\nretweeted_profile_image={tweet.retweeted_profile_image} \r\nretweeted_text={tweet.retweeted_text} is_quote_status={tweet.is_quote_status} \r\nretweet_count={tweet.retweet_count} favorite_count={tweet.favorite_count} \r\nid={tweet.id} key={tweet.id} />*/\r\n\r\nexport default IndividualTweetMain;","C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Feed.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\CreateTweet.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\SignOutButton.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\SidebarButton.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\Tweet.js",[],"C:\\Users\\Nathan\\Desktop\\reimplement_social_media_platform\\src\\components\\SearchButton.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":26},{"ruleId":"98","severity":1,"message":"102","line":12,"column":14,"nodeType":"100","messageId":"101","endLine":12,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":89,"column":7,"nodeType":"105","endLine":89,"endColumn":9,"suggestions":"106"},{"ruleId":"103","severity":1,"message":"107","line":114,"column":7,"nodeType":"105","endLine":114,"endColumn":9,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"109","line":87,"column":7,"nodeType":"105","endLine":87,"endColumn":19,"suggestions":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTweets'. Either include it or remove the dependency array.","ArrayExpression",["113"],"React Hook useEffect has a missing dependency: 'getResults'. Either include it or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'getIndividualTweet'. Either include it or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [getTweets]",{"range":"122","text":"123"},"Update the dependencies array to be: [getResults]",{"range":"124","text":"125"},"Update the dependencies array to be: [alreadyDid, getIndividualTweet]",{"range":"126","text":"127"},[3851,3853],"[getTweets]",[4518,4520],"[getResults]",[3574,3586],"[alreadyDid, getIndividualTweet]"]